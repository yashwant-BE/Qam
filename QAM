clc;
close all;
m = 8; % Number of symbols in the constellation
k = log2(m); % Number of bits per symbol
n = 9e3; % Number of symbols
nsamp = 1; % Number of samples per symbol
% Generate random binary sequence
x = randi([0 1], n*k, 1);
% Display the binary sequence
stem(x(1:20), 'filled');
title('Binary Sequence');
xlabel('Bit Index');
ylabel('Bit Amplitude');
% Convert binary sequence to symbols
xsym = zeros(n, 1);
for i = 1:n
 xsym(i) = bin2dec(num2str(x((i-1)*k+1:i*k).')); % Convert binary to decimal
end
% Display the symbol plot
figure;
stem(xsym(1:10));
title('Symbol Plot');
xlabel('Symbol Index');
ylabel('Symbol Amplitude');
% Modulate symbols using QAM modulation
ytx = qammod(xsym, m);
% Add AWGN (Additive White Gaussian Noise) to the signal
ebno = 10; % Eb/No (dB)
snr = ebno + 10*log10(k) - 10*log10(nsamp); % Convert Eb/No to SNR
yn = awgn(ytx, snr);
% Visualize the QAM constellations
figure;
scatterplot(ytx);
title('Transmitted QAM Constellation');
figure;
scatterplot(yn);
title('Received QAM Constellation with AWGN');
